( hello-pong.tal )
( the final project of the uxn tutorial! )

( devices )
|00 @System  [ &vector $2 &pad $6 &r $2 &g $2 &b $2 ]
|20 @Screen  [ &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1 ]
|80 @Controller [ &vector $2 &button $1 &key $1 ]

%WALL-MARGIN   { #0010 }
%PADDLE-WIDTH  { #0010 } ( 2 tiles )
%PADDLE-HEIGHT { #0018 } ( 3 tiles )
%PADDLE-SPEED  { #0001 }
%PADDLE-COLOR  { #c5 }
%CLEAR-COLOR   { #40 }
%HALF2 { #01 SFT2 } ( short -- short/2 )

( zero page )
|0000
    ( @bg-sprite [ &pos-x $2 &pos-y $2 ] )
    @left  [ &x $2 &y $2 ]
    @right [ &x $2 &y $2 ]
    @framecount $1 

( main program )
|0100
@setup
    ( set system colors )
    #2ce9 .System/r DEO2
    #01c0 .System/g DEO2
    #2ce5 .System/b DEO2

    ;on-frame .Screen/vector DEO2

    ( draw bg )
    ;draw-background JSR2

    ( initialize paddle sprite positions )
    ( x coords )
    WALL-MARGIN .left/x STZ2 ( left )
    .Screen/width DEI2 WALL-MARGIN SUB2 ( right ) 
    PADDLE-WIDTH SUB2 .right/x STZ2
    ( y coords )
    .Screen/height DEI2 PADDLE-HEIGHT SUB2 HALF2 DUP2
    .left/y STZ2 .right/y STZ2
BRK

@on-frame
    ( clear paddles )
    .left/x LDZ2 .left/y LDZ2 CLEAR-COLOR ;draw-paddle JSR2
    .right/x LDZ2 .right/y LDZ2 CLEAR-COLOR ;draw-paddle JSR2

    ( update paddles )
    ;update-paddles JSR2

    ( draw paddles )
    .left/x LDZ2 .left/y LDZ2 PADDLE-COLOR ;draw-paddle JSR2
    .right/x LDZ2 .right/y LDZ2 PADDLE-COLOR ;draw-paddle JSR2
BRK

@draw-background
    ;tile-background .Screen/addr DEO2
    .Screen/height DEI2 WALL-MARGIN SUB2 WALL-MARGIN
    &loop-y
        DUP2 .Screen/y DEO2 
        ( draw row )
        .Screen/width DEI2 #0000 ( limit and initial x )
        &loop-x
            DUP2 .Screen/x DEO2
            #03 .Screen/sprite DEO
            #0008 ADD2 GTH2k ,&loop-x JCN
        POP2 POP2
        ( inc y and loop back )
        #0008 ADD2 GTH2k ,&loop-y JCN
    POP2 POP2
JMP2r
BRK

@draw-paddle ( x^ y^ color -- )
    ( save color )
    STH

    ( set initial y and x )
    .Screen/y DEO2
    .Screen/x DEO2

    ( set first sprite address )
    ;paddle-sprite .Screen/addr DEO2

    ( auto byte: length: +1 sprite )
    ( set auto addr and auto y )
    #16 .Screen/auto DEO

    ( get color from return stack )
    STHr
    
    ( draw three rows: )
    .Screen/sprite DEOk DEOk DEO
JMP2r
BRK

@update-paddles ( -- )
    ( updates paddle x y coords in zpage )
    ( left paddle controlled by up/down arrows )
    &left
        ( check if up/down arrows are pressed and JCN ) 
        
        &right JMP ( JMP to right paddle if none are pressed )

        &left-up

        &left-down

    &right

        &end JMP
        &right-up

        &right-down

    &end
    ( right paddle controlled by w/s keys )

JMP2r
BRK

@tile-background 1122 4488 1122 4488
@paddle-sprite
 &tile0 [ 3f 7f e7 c3 c3 c3 c3 c3  00 00 18 3c 3c 3c 3c 3c ]
 &tile1 [ fc fe ff ff ff ff ff ff  00 00 00 00 00 00 06 06 ]
 &tile2 [ c3 c3 c3 c3 e7 ff ff ff  3c 3c 3c 3c 18 00 00 00 ]
 &tile3 [ ff ff ff ff ff ff ff ff  06 06 06 06 06 06 06 06 ]
 &tile4 [ ff ff ff ff ff ff 7f 3f  00 00 00 00 00 00 00 00 ]
 &tile5 [ ff ff ff ff ff ff fe fc  06 06 06 06 06 1e 3c 00 ]